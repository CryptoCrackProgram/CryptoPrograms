var cipher,uInt8Array,totalWorkers,workerNumber,numSols,keyword,minPeriod,maxPeriod,plain,isRunning,longColumnLength,keyLength,keyTrials,arrKey=[],solutions=[],numberGrid=[],plainGrid=[],columnKey=[];
function decipherAmsco(){"function"===typeof importScripts&&(importScripts("../support/decipherLib.js"),importScripts("../support/cryptoPrograms.js"));keyTrials=0;arrKey.length=0;initSolution();"undefined"!==typeof keyword&&(0<keyword.length?solveWithKeyword(keyword):solveAmsco());!1===isRunning&&self.postMessage({cmd:"STOP",msg:""})}
function solveAmsco(){var a,d,b,c,f,g=[];var e=[];var h=cipher.length;var r=parseInt(h/3*2)+(0<h%3);h=minPeriod===maxPeriod?200:10;var t=minPeriod===maxPeriod&&10<minPeriod?minPeriod:minPeriod+workerNumber;isRunning=!0;for(b=1;b<=h;b+=h-1)for(keyLength=t;keyLength<=maxPeriod;keyLength+=totalWorkers){var q=parseInt(r/keyLength);for(f=1;3>f;f+=1){numberGrid=[];for(a=0;a<q+1;a+=1)numberGrid[a]=[];plainGrid=[];for(a=0;a<q+1;a+=1)plainGrid[a]=[];setLettersPerCell(q+1,f);if(10>=keyLength){if(isRunning){columnKey=
[];for(a=0;a<keyLength;a+=1)columnKey[a]=chr(ord("A")+a);b=permutator(columnKey);for(a=0;a<b.length;a+=1){keyTrials+=1;for(d=0;d<keyLength;d+=1)columnKey[d]=b[a][d];fillGrid(cipher,keyLength);decrypt();e=getTetraScore(plain.replace(/[^a-z]/g,""));solutions[numSols-1]<e&&(solutions[numSols-1]=e,solutions.sort(function(n,p){return p-n}),self.postMessage({cmd:"reslt",key:columnKey.join(""),score:e,text:plain.toLowerCase()}));self.postMessage({cmd:"progress",worker:workerNumber,trials:keyTrials,totalWorkers:totalWorkers})}b=
h}}else for(d=0;1E3>d;d+=1){e=randomiseAlphabet(keyLength).split("");for(a=0;a<e.length;a+=1)columnKey[a]=e[a],g[a]=e[a];fillGrid(cipher,keyLength);decrypt();e=getTetraScore(plain.replace(/[^a-z]/g,""));keyTrials+=1;solutions[numSols-1]<e&&(solutions[numSols-1]=e,solutions.sort(function(n,p){return p-n}),self.postMessage({cmd:"reslt",key:columnKey.join(""),score:e,text:plain.toLowerCase()}));for(c=15;2<c;--c){a=0;do{columnKey=g.slice();var l=Math.floor(Math.random()*keyLength);var k=Math.floor(Math.random()*
keyLength);var m=columnKey[l];columnKey[l]=columnKey[k];columnKey[k]=m;fillGrid(cipher,keyLength);decrypt();k=getTetraScore(plain.replace(/[^a-z]/g,""));solutions[numSols-1]<k&&(solutions[numSols-1]=k,solutions.sort(function(n,p){return p-n}),self.postMessage({cmd:"reslt",key:columnKey.join(""),score:k,text:plain.toLowerCase()}));keyTrials+=1;m=k-e;l=0;if(0<m)l=1;else{m=Math.pow(Math.E,m/c);var u=(1E3*Math.random()+1)/1E3;m>u&&(l=1)}1===l&&(g=columnKey.slice(),e=k);a+=1}while(a<b&&isRunning)}}}}isRunning=
!1;self.postMessage({cmd:"progress",worker:workerNumber,trials:keyTrials,totalWorkers:totalWorkers})}
function solveWithKeyword(){var a;keyLength=keyword.length;var d=parseInt(cipher.length/3*2)+(0<cipher.length%3);var b=parseInt(d/keyLength);for(d=1;3>d;d+=1){numberGrid=[];for(a=0;a<b+1;a+=1)numberGrid[a]=[];plainGrid=[];for(a=0;a<b+1;a+=1)plainGrid[a]=[];setLettersPerCell(b+1,d);columnKey=[];for(a=0;a<keyLength;a+=1)columnKey[a]=keyword[a];fillGrid(cipher,keyLength);decrypt();a=getTetraScore(plain.replace(/[^a-z]/g,""));solutions[numSols-1]<a&&(solutions[numSols-1]=a,solutions.sort(function(c,f){return f-
c}),self.postMessage({cmd:"reslt",key:columnKey.join(""),score:a,text:plain.toLowerCase()}))}isRunning=!1;self.postMessage({cmd:"progress",worker:workerNumber,trials:keyTrials,totalWorkers:totalWorkers})}function setLettersPerCell(a,d){var b,c,f;longColumnLength=f=0;var g=d;var e=cipher.length;for(b=0;b<a;b+=1){var h=g;for(c=0;c<keyLength;c+=1)f<e?(numberGrid[b][c]=h,f+=h,f>e&&(numberGrid[b][c]=1),h^=3):numberGrid[b][c]=0;0!==numberGrid[b][0]&&(longColumnLength+=1);g^=3}}
function fillGrid(a,d){var b=0,c,f;for(f=0;f<d;f+=1){var g=columnKey.indexOf(chr(ord("A")+f));for(c=0;c<longColumnLength;c+=1)0<numberGrid[c][g]&&(plainGrid[c][g]=a[b],b+=1,2===numberGrid[c][g]&&(plainGrid[c][g]+=a[b],b+=1))}}function decrypt(){var a;plain="";for(a=0;a<plainGrid.length;a+=1)plain+=plainGrid[a].join("");plain=plain.toLowerCase()}
self.addEventListener("message",function(a){a=a.data;cipher=a.cipher;uInt8Array=a.uInt8Array;totalWorkers=a.totalWorkers;workerNumber=a.workerNumber;numSols=a.numSols;keyword=a.keyword;minPeriod=a.minPeriod;maxPeriod=a.maxPeriod;decipherAmsco()},!1);