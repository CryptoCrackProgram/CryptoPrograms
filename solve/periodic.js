var plain,period,arrKey=[],solutions=[],cipher,cType,keyword,minPeriod,maxPeriod,numSols,uInt8Array,workerNumber,totalWorkers,isRunning;function decipherPerdc(){"function"===typeof importScripts&&(importScripts("../support/decipherLib.js"),importScripts("../support/cryptoPrograms.js"));arrKey.length=0;initSolution();"undefined"!==typeof keyword&&(0<keyword.length?solveWithKeyword():solvePeriodic());!1===isRunning&&self.postMessage({cmd:"STOP",msg:""})}
function solvePeriodic(){var c=4===cType?10:26;3===cType?solvePorta(c):solveNonPorta(c)}
function solveNonPorta(c){var a,b,d,e,h=0,k=[],f=ord("A");var l=minPeriod===maxPeriod&&10<minPeriod?minPeriod:minPeriod+workerNumber;isRunning=!0;for(period=l;period<=maxPeriod;period+=totalWorkers)for(l=e=0;l<c;l+=1)for(k[0]=l,a=0;a<c;a+=1){k[1]=a;for(b=0;b<c;b+=1)for(k[2]=b,d=0;d<c;d+=1){k[3]=d;var g=getTestKeyScore(k,4,0);g>e&&(e=g,arrKey[0]=chr(l+f),arrKey[1]=chr(a+f),arrKey[2]=chr(b+f),arrKey[3]=chr(d+f),getRemainingKey(c),plain=decipher(arrKey),g=getTetraScore(plain),solutions[numSols-1]<g&&
(solutions[numSols-1]=g,solutions.sort(function(m,n){return n-m}),self.postMessage({cmd:"reslt",key:arrKey.join(""),score:g,text:plain.toLowerCase()})));h+=1}self.postMessage({cmd:"progress",worker:workerNumber,trials:h,totalWorkers:totalWorkers})}isRunning=!1;self.postMessage({cmd:"progress",worker:workerNumber,trials:h,totalWorkers:totalWorkers})}
function getTestKeyScore(c,a,b){var d,e=0,h=[];switch(cType){case 0:case 4:for(d=b;d<cipher.length-a+1;d+=period){plain="";for(b=0;b<a;b+=1)plain+=decryptVigenere(cipher.charAt(d+b),c[b]);e+=getSingleTetraScore(plain)}break;case 1:for(d=b;d<cipher.length-a+1;d+=period){plain="";for(b=0;b<a;b+=1)plain+=decryptBeaufort(cipher.charAt(d+b),c[b]);e+=getSingleTetraScore(plain)}break;case 2:for(d=b;d<cipher.length-a+1;d+=period){plain="";for(b=0;b<a;b+=1)plain+=decryptVariant(cipher.charAt(d+b),c[b]);e+=
getSingleTetraScore(plain)}break;case 3:for(d=0;d<a;d+=1)h[d]=Math.floor(c[d]/2)+13;for(d=b;d<cipher.length-a+1;d+=period){plain="";for(b=0;b<a;b+=1)plain+=decryptPorta(cipher.charAt(d+b),h[b]);e+=getSingleTetraScore(plain)}}return e}
function getRemainingKey(c){var a,b,d=[],e=ord("A");var h=3===cType?2:1;for(a=4;a<period;a+=1){var k=0;d[0]=ord(arrKey[a-3])-e;d[1]=ord(arrKey[a-2])-e;d[2]=ord(arrKey[a-1])-e;arrKey[a]="A";for(b=0;b<c;b+=h){d[3]=b;var f=getTestKeyScore(d,4,a-3);f>k&&(k=f,arrKey[a]=chr(b+e))}}}
function decipher(c){var a;plain="";switch(cType){case 0:case 4:for(a=0;a<cipher.length;a+=1)plain+=decryptVigenere(cipher.charAt(a),ord(c[a%period])-65);break;case 1:for(a=0;a<cipher.length;a+=1)plain+=decryptBeaufort(cipher.charAt(a),ord(c[a%period])-65);break;case 2:for(a=0;a<cipher.length;a+=1)plain+=decryptVariant(cipher.charAt(a),ord(c[a%period])-65);break;case 3:var b=[];for(a=0;a<period;a+=1)b[a]=Math.floor((ord(c[a])-65)/2)+13;for(a=0;a<cipher.length;a+=1)plain+=decryptPorta(cipher.charAt(a),
b[a%period])}return plain}
function solvePorta(c){var a,b,d,e,h,k=0,f=[],l=ord("A");isRunning=!0;for(period=minPeriod+workerNumber;period<=maxPeriod;period+=totalWorkers)for(a=h=0;a<c;a+=2)for(f[0]=a,b=0;b<c;b+=2){f[1]=b;for(d=0;d<c;d+=2)for(f[2]=d,e=0;e<c;e+=2){f[3]=e;var g=getTestKeyScore(f,4,0);g>h&&(h=g,arrKey[0]=chr(a+l),arrKey[1]=chr(b+l),arrKey[2]=chr(d+l),arrKey[3]=chr(e+l),getRemainingKey(c),plain=decipher(arrKey),g=getTetraScore(plain),solutions[numSols-1]<g&&(solutions[numSols-1]=g,solutions.sort(sortFunction),self.postMessage({cmd:"reslt",
key:arrKey.join(""),score:g,text:plain.toLowerCase()})));k+=1}self.postMessage({cmd:"progress",worker:workerNumber,trials:k,totalWorkers:totalWorkers})}isRunning=!1;self.postMessage({cmd:"progress",worker:workerNumber,trials:k,totalWorkers:totalWorkers})}function solveWithKeyword(){isRunning=!0;period=keyword.length;plain=decipher(keyword);var c=getTetraScore(plain);self.postMessage({cmd:"reslt",key:arrKey.join(""),score:c,text:plain.toLowerCase()});isRunning=!1}
self.addEventListener("message",function(c){c=c.data;cipher=c.cipher;uInt8Array=c.uInt8Array;totalWorkers=c.totalWorkers;workerNumber=c.workerNumber;numSols=c.numSols;cType=c.type;keyword=c.keyword;minPeriod=c.minPeriod;maxPeriod=c.maxPeriod;decipherPerdc()},!1);