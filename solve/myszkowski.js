var cipher,uInt8Array,totalWorkers,workerNumber,numSols,keyword,minPeriod,maxPeriod,isRunning,keyLength,keyTrials,solutions=[],cipherGrid=[],shortColumnLength,columnOrderPtr=[],sortedColumnOrderPtr,columnLengthsPtr=[],cipherPtr;
function decipherMysz(){"function"===typeof importScripts&&(importScripts("../support/decipherLib.js"),importScripts("../support/cryptoPrograms.js"));keyTrials=0;initSolution();"undefined"!==typeof keyword&&(0<keyword.length?solveWithKeyword():solveMysz());!1===isRunning&&self.postMessage({cmd:"STOP",msg:""})}
function solveMysz(){var a,b,c=[];var d=[];var e=[];var f=[];var k=cipher.length;var l=minPeriod===maxPeriod?50:20;var r=minPeriod===maxPeriod?minPeriod:minPeriod+workerNumber;isRunning=!0;var n=1;a:for(;n<=l;n+=l-1)for(c=[],f=[],keyLength=r;keyLength<=maxPeriod;keyLength+=totalWorkers)if(isRunning){cipherGrid=[];for(a=0;a<=keyLength;a+=1)cipherGrid[a]=[];var m=[];sortedColumnOrderPtr=a=[];columnLengthsPtr=m;shortColumnLength=Math.floor(k/keyLength);for(a=0;a<keyLength;a+=1)m[a]=a<k%keyLength?shortColumnLength+
1:shortColumnLength;for(m=cipherPtr=0;1E3>m;m+=1)if(isRunning){d=randomiseNumbers(keyLength);for(a=0;a<d.length;a+=1)f[a]=d[a],c[a]=d[a];e=d.slice();cipherPtr=0;getKeywordOrder(e);fillColumns();var g=rearrangeText();d=getTetraScore(g);e=getColumnOrder(e,f);solutions[numSols-1]<d&&(solutions[numSols-1]=d,solutions.sort(function(p,q){return q-p}),self.postMessage({cmd:"reslt",key:e.join(""),score:d,text:g}));for(b=15;2<b;--b)if(a=0,isRunning){do{f=c.slice();if(.1>Math.random())f[Math.floor(Math.random()*
keyLength)]=Math.floor(Math.random()*keyLength);else{var h=Math.floor(Math.random()*keyLength);e=Math.floor(Math.random()*keyLength);g=f[h];f[h]=f[e];f[e]=g}e=f.slice();cipherPtr=0;getKeywordOrder(e);fillColumns();g=rearrangeText();h=getTetraScore(g);e=getColumnOrder(e,f);solutions[numSols-1]<h&&(solutions[numSols-1]=h,solutions.sort(function(p,q){return q-p}),self.postMessage({cmd:"reslt",key:e.join(""),score:h,text:g}));keyTrials+=1;g=h-d;e=0;if(0<g)e=1;else{g=Math.pow(Math.E,g/b);var t=(1E3*Math.random()+
1)/1E3;g>t&&(e=1)}1===e&&(c=f.slice(),d=h);a+=1}while(a<n&&isRunning)}else break a}}else break a;isRunning=!1}
function getKeywordOrder(a){var b;for(b=0;b<keyLength;b+=1)columnOrderPtr[b]=b,sortedColumnOrderPtr[b]=a[b];for(b=1;b<keyLength;b+=1)for(a=0;a<keyLength-b;a+=1)if(sortedColumnOrderPtr[a]>sortedColumnOrderPtr[a+1]){var c=sortedColumnOrderPtr[a];sortedColumnOrderPtr[a]=sortedColumnOrderPtr[a+1];sortedColumnOrderPtr[a+1]=c;c=columnOrderPtr[a];columnOrderPtr[a]=columnOrderPtr[a+1];columnOrderPtr[a+1]=c}}
function fillColumns(){var a;var b=0;do{var c=sortedColumnOrderPtr[b];var d=!1;for(a=keyLength;a>=b;--a)if(sortedColumnOrderPtr[a]===c)if(b===a)fillSingleColumn(b);else{var e=a-b+1;fillMultipleColumns(b,e);d=!0;a=b}b=d?b+e:b+1}while(b<keyLength)}function fillSingleColumn(a){var b=columnOrderPtr[a];for(a=0;a<columnLengthsPtr[b];a+=1)cipherGrid[b][a]=cipher[cipherPtr],cipherPtr+=1}
function fillMultipleColumns(a,b){var c,d,e=0;for(c=0;c<b;c+=1){var f=columnOrderPtr[a+c];var k=columnLengthsPtr[f];e+=k;var l=0;for(d=c;d<k*b;d+=b)cipherGrid[f][l]=cipher[cipherPtr+d],l+=1}cipherPtr+=e}function rearrangeText(){var a,b="";for(a=0;a<cipher.length;a+=1){var c=a%keyLength;var d=Math.floor(a/keyLength);b+=cipherGrid[c][d]}return b.toLowerCase()}
function getColumnOrder(a,b){var c,d,e=ord("A"),f=[];for(c=0;c<keyLength;c+=1)f[c]=0;for(c=0;c<keyLength;c+=1)f[b[c]]=1;for(c=d=0;c<keyLength;c+=1)1===f[c]&&(f[c]=d,d+=1);for(c=0;c<keyLength;c+=1)a[c]=chr(f[b[c]]+e);return a}
function decrypt(a){var b,c=0,d=[],e=ord("A");var f=cipher.length%keyLength;for(b=0;b<keyLength;b+=1)d[ord(a[b])-e]=b;for(b=0;b<keyLength;b+=1){for(a=0;a<shortColumnLength;a+=1)cipherGrid[a][d[b]]=cipher[c],c+=1;d[b]<f&&(cipherGrid[a][d[b]]=cipher[c],c+=1)}return[].concat.apply([],cipherGrid).join("").toLowerCase()}function fillGrid(a,b){var c,d,e=0;for(c=0;c<keyLength;c+=1)for(d=0;d<b;d+=1)cipherGrid[c][d]=a[e],e+=1}
function solveWithKeyword(){var a;var b=[];var c=[];keyLength=keyword.length;for(a=0;a<keyLength;a+=1)b[a]=[];cipherGrid=b;sortedColumnOrderPtr=[];columnLengthsPtr=c;shortColumnLength=Math.floor(cipher.length/keyLength);b=cipher.length%keyLength;for(a=0;a<keyLength;a+=1)c[a]=a<b?shortColumnLength+1:shortColumnLength;cipherPtr=0;getKeywordOrder(keyword);fillColumns();c=rearrangeText();a=getTetraScore(c);solutions[numSols-1]<a&&(solutions[numSols-1]=a,solutions.sort(function(d,e){return e-d}),self.postMessage({cmd:"reslt",
key:keyword,score:a,text:c}));isRunning=!1}self.addEventListener("message",function(a){a=a.data;cipher=a.cipher;uInt8Array=a.uInt8Array;totalWorkers=a.totalWorkers;workerNumber=a.workerNumber;numSols=a.numSols;keyword=a.keyword;minPeriod=a.minPeriod;maxPeriod=a.maxPeriod;decipherMysz()},!1);