var cipher,uInt8Array,totalWorkers,workerNumber,numSols,keyword,minPeriod,maxPeriod,isRunning,keyTrials,solutions=[],allSols=[100],plainText;function decipherSwagman(){"function"===typeof importScripts&&(importScripts("../support/decipherLib.js"),importScripts("../support/cryptoPrograms.js"));initSolution();"undefined"!==typeof keyword&&(0<keyword.length?solveWithKeyword(keyword):solveSwagman());!1===isRunning&&self.postMessage({cmd:"STOP",msg:""})}
function solveSwagman(){var a,b;var c=[];var f=cipher.length;keyTrials=0;var e=minPeriod===maxPeriod?minPeriod:minPeriod+workerNumber;isRunning=!0;for(a=0;100>a;a+=1)allSols[a]=[],allSols[a][0]=0,allSols[a][1]="",allSols[a][2]="";for(;e<=maxPeriod;e+=totalWorkers)if(0===f%e&&isRunning){c=[];for(a=0;a<e;a+=1)c[a]=a;var d=permutator(c);for(a=0;a<d.length;a+=1)if(isRunning){keyTrials+=1;plainText="";for(c=b=0;c<f;c+=e)plainText+=cipher[d[a][b]+c],b+=1,b===e&&(b=0);plainText=plainText.toLowerCase();b=
getTetraScore(plainText);if(solutions[numSols-1]<b){solutions[numSols-1]=b;solutions.sort(function(k,l){return l-k});var g="";for(c=0;c<e;c+=1)g+=d[a][c]+1;allSols[allSols.length-1][0]=b;allSols[allSols.length-1][1]=g;allSols[allSols.length-1][2]=plainText;allSols.sort(sortFunction)}self.postMessage({cmd:"progress",worker:workerNumber,trials:keyTrials})}else break;var h=determineBestMatch(e);for(a=0;a<d.length;a+=1){plainText=g="";for(c=0;c<e;c+=1)g+=h[d[a][c]][0]+"/",plainText+=h[d[a][c]][1],plainText+=
" ";g=g.slice(0,-1);plainText=plainText.slice(0,-1);b=getTetraScore(plainText.replace(/[^a-z]/g,""));self.postMessage({cmd:"reslt",key:g,score:b,trials:keyTrials,text:plainText})}}isRunning=!1;self.postMessage({cmd:"progress",worker:workerNumber,trials:keyTrials})}
function determineBestMatch(a){var b,c=1,f=0,e=allSols[0][1],d=[];for(b=0;b<a;b+=1)d[b]=[],d[b][0]="",d[b][1]="";d[0][0]=allSols[0][1];d[0][1]=allSols[0][2];do allSols[c][1].length===a&&(b=allSols[c][1],!0===swagmanValidRow(e,b,f,a)&&(e+=b,d[f+1][0]=b,d[f+1][1]=allSols[c][2],f+=1)),c+=1;while(f<a&&c<allSols.length);return d}function swagmanValidRow(a,b,c,f){var e,d;var g=!0;for(e=0;e<=c;e+=1)for(d=0;d<f;d+=1)if(a[e*f+d]===b[d]){g=!1;break}return g}
function solveWithKeyword(a){var b,c,f,e="";var d=Math.sqrt(a.length);plainText="";for(b=0;b<d;b+=1){var g=a.substr(b*d,d);e+=g+"/";for(c=f=0;c<cipher.length;c+=d)plainText+=cipher[Number(g[f])-1+c],f+=1,f===d&&(f=0)}plainText=plainText.toLowerCase();a=getTetraScore(plainText);e=e.slice(0,-1);self.postMessage({cmd:"reslt",key:e,score:a,trials:keyTrials,text:plainText});isRunning=!1}
self.addEventListener("message",function(a){a=a.data;cipher=a.cipher;uInt8Array=a.uInt8Array;totalWorkers=a.totalWorkers;workerNumber=a.workerNumber;numSols=a.numSols;keyword=a.keyword;minPeriod=a.minPeriod;maxPeriod=a.maxPeriod;decipherSwagman()},!1);