var solutions=[],cipher,keyword,numSols,uInt8Array,workerNumber,totalWorkers,alphabet,routes,isRunning,gridWd,keyGrid,transC,transRC;function decipherPhillips(){"function"===typeof importScripts&&(importScripts("../support/decipherLib.js"),importScripts("../support/cryptoPrograms.js"));initSolution();"undefined"!==typeof keyword&&(0<keyword.length?solveWithKeyword():solvePhillips());!1===isRunning&&self.postMessage({cmd:"STOP",msg:""})}
function solvePhillips(){var a,b,e;var f=[];var l=[],c=[],h=[];var g=alphabet.length;gridWd=Math.sqrt(g);var n=0;isRunning=!0;readGridTranspositions();isRunning=!0;var m=0;a:for(;1E3>m;m+=1)if(isRunning){f=randomiseAlphabet(g,alphabet).split("");for(a=0;a<f.length;a+=1)c[a]=f[a],l[a]=f[a];var d=decrypt(c.join(""),0);a=5===gridWd?getTetraScore(d):getTetraScore(d.replace(/[^a-z]/g,""));a>n&&(n=a);solutions[numSols-1]<a&&(solutions[numSols-1]=a,solutions.sort(function(q,r){return r-q}),self.postMessage({cmd:"reslt",
key:c.join(""),score:a,text:d}));for(e=15;1<e;--e)if(isRunning){var p=f=0;do{d=Math.floor(50*Math.random());switch(d){case 1:case 2:case 8:for(b=0;b<g;b+=1)c[b]=l[routes[d][b]];break;case 3:for(b=0;b<g;b+=1)c[b]=l[b];d=Math.floor(Math.random()*gridWd)*gridWd;var k=Math.floor(Math.random()*gridWd)*gridWd;for(b=0;b<gridWd;b+=1)h[b]=c[d+b];for(b=0;b<gridWd;b+=1)c[d+b]=c[k+b];for(b=0;b<gridWd;b+=1)c[k+b]=h[b];break;case 4:for(b=0;b<g;b+=1)c[b]=l[b];d=Math.floor(Math.random()*gridWd);k=Math.floor(Math.random()*
gridWd);for(b=0;b<gridWd;b+=1)h[b]=c[d+b*gridWd];for(b=0;b<gridWd;b+=1)c[d+b*gridWd]=c[k+b*gridWd];for(b=0;b<gridWd;b+=1)c[k+b*gridWd]=h[b];break;default:for(b=0;b<g;b+=1)c[b]=l[b];b=Math.floor(Math.random()*g);d=Math.floor(Math.random()*g);k=c[b];c[b]=c[d];c[d]=k}d=decrypt(c.join(""),0);b=5===gridWd?getTetraScore(d):getTetraScore(d.replace(/[^a-z]/g,""));b>p&&(p=b,p>n&&(n=p));solutions[numSols-1]<b&&(solutions[numSols-1]=b,solutions.sort(function(q,r){return r-q}),self.postMessage({cmd:"reslt",key:c.join(""),
score:b,text:d}));k=b-a;d=0;if(0<k)d=1;else{k=Math.pow(Math.E,k/e);var t=(1E3*Math.random()+1)/1E3;k>t&&(d=1)}if(1===d){for(a=0;a<c.length;a+=1)l[a]=c[a];a=b}f+=1}while(1E3>f&&isRunning)}else break a}else break a;isRunning=!1}
function decrypt(a,b){var e;switch(b){case 0:createRGrids(a);break;case 1:createCGrids(a);break;default:createRCGrids(a)}var f=0;var l="";var c=-1;var h=8*gridWd;for(e=0;e<cipher.length;e+=1){var g=Math.floor(e%h/gridWd);if(g!==c){var n=keyGrid[g];c=g}var m=cipher[f];var d=n.indexOf(m);m=Math.floor(d/gridWd);d%=gridWd;--m;0>m&&(m=gridWd-1);--d;0>d&&(d=gridWd-1);m=m*gridWd+d;l+=keyGrid[g][m];f+=1}return l.toLowerCase()}
function solveWithKeyword(){var a,b,e;gridWd=Math.sqrt(alphabet.length);readGridTranspositions();isRunning=!0;if(5===gridWd)var f=getKeyedAlphabet(alphabet,keyword);else{f=getKeyedAlphabet(alphabet,keyword);var l=getACAKeyedAlphabet(alphabet,keyword)}isRunning=!0;for(b=0;b<routes.length;b+=1){var c="";for(a=0;a<alphabet.length;a+=1)c+=f[routes[b][a]];for(e=0;3>e;e+=1){var h=decrypt(c,e);a=5===gridWd?getTetraScore(h):getTetraScore(h.replace(/[^a-z]/g,""));solutions[numSols-1]<a&&(solutions[numSols-
1]=a,solutions.sort(function(g,n){return n-g}),self.postMessage({cmd:"reslt",key:c,score:a,text:h}));if(6===gridWd){c="";for(a=0;a<alphabet.length;a+=1)c+=l[routes[b][a]];h=decrypt(c,e);a=getTetraScore(h.replace(/[^a-z]/g,""));solutions[numSols-1]<a&&(solutions[numSols-1]=a,solutions.sort(function(g,n){return n-g}),self.postMessage({cmd:"reslt",key:c,score:a,text:h}))}}}isRunning=!1}
function createRGrids(a){keyGrid=[];keyGrid[0]=a;keyGrid[1]=a.substr(gridWd,gridWd)+a.substr(0,gridWd)+a.substr(2*gridWd);keyGrid[2]=a.substr(gridWd,2*gridWd)+a.substr(0,gridWd)+a.substr(3*gridWd);keyGrid[3]=a.substr(gridWd,3*gridWd)+a.substr(0,gridWd)+a.substr(4*gridWd);keyGrid[4]=5===gridWd?a:a.substr(gridWd,4*gridWd)+a.substr(0,gridWd)+a.substr(5*gridWd);keyGrid[5]=5===gridWd?a.substr(2*gridWd,gridWd)+a.substr(gridWd,gridWd)+a.substr(3*gridWd)+a.substr(0,gridWd):a;keyGrid[6]=5===gridWd?a.substr(2*
gridWd,2*gridWd)+(a.substr(gridWd,gridWd)+a.substr(4*gridWd)+a.substr(0,gridWd)):a.substr(2*gridWd,gridWd)+(a.substr(gridWd,gridWd)+a.substr(3*gridWd)+a.substr(0,gridWd));5===gridWd?keyGrid[7]=keyGrid[1]:(keyGrid[7]=a.substr(2*gridWd,2*gridWd),keyGrid[7]+=a.substr(gridWd,gridWd),keyGrid[7]+=a.substr(4*gridWd),keyGrid[7]+=a.substr(0,gridWd))}function createCGrids(a){var b,e;keyGrid=[];keyGrid[0]=a;for(b=1;8>b;b+=1){var f="";for(e=0;e<a.length;e+=1)f+=a[transC[b][e]];keyGrid[b]=f}}
function createRCGrids(a){var b,e;keyGrid=[];keyGrid[0]=a;for(b=1;8>b;b+=1){var f="";for(e=0;e<a.length;e+=1)f+=a[transRC[b][e]];keyGrid[b]=f}}
function readGridTranspositions(){5===gridWd?(transC=[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],[1,0,2,3,4,6,5,7,8,9,11,10,12,13,14,16,15,17,18,19,21,20,22,23,24],[1,2,0,3,4,6,7,5,8,9,11,12,10,13,14,16,17,15,18,19,21,22,20,23,24],[1,2,3,0,4,6,7,8,5,9,11,12,13,10,14,16,17,18,15,19,21,22,23,20,24],[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],[2,1,3,4,0,7,6,8,9,5,12,11,13,14,10,17,16,18,19,15,22,21,23,24,20],[2,3,1,4,0,7,8,6,9,5,12,13,11,14,10,17,18,16,
19,15,22,23,21,24,20],[1,0,2,3,4,6,5,7,8,9,11,10,12,13,14,16,15,17,18,19,21,20,22,23,24]],transRC=[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],[6,5,7,8,9,1,0,2,3,4,11,10,12,13,14,16,15,17,18,19,21,20,22,23,24],[6,7,8,5,9,11,12,10,13,14,1,2,0,3,4,16,17,15,18,19,21,22,20,23,24],[6,7,8,5,9,11,12,13,10,14,16,17,18,15,19,1,2,3,0,4,21,22,23,20,24],[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],[12,11,13,14,10,7,6,8,9,5,17,16,18,19,15,22,21,23,24,20,2,1,3,4,0],
[12,13,11,14,10,17,18,16,19,15,7,8,6,9,5,22,23,21,24,20,2,3,1,4,0],[6,5,7,8,9,1,0,2,3,4,11,10,12,13,14,16,15,17,18,19,21,20,22,23,24]]):(transC=[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],[1,0,2,3,4,5,7,6,8,9,10,11,13,12,14,15,16,17,19,18,20,21,22,23,25,24,26,27,28,29,31,30,32,33,34,35],[1,2,0,3,4,5,7,8,6,9,10,11,13,14,12,15,16,17,19,20,18,21,22,23,25,26,24,27,28,29,31,32,30,33,34,35],[1,2,3,0,4,5,7,8,9,6,10,11,13,14,15,12,16,17,19,20,21,18,
22,23,25,26,27,24,28,29,31,32,33,30,34,35],[1,2,3,4,0,5,7,8,9,10,6,11,13,14,15,16,12,17,19,20,21,22,18,23,25,26,27,28,24,29,31,32,33,34,30,35],[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],[2,1,3,4,5,0,8,7,9,10,11,6,14,13,15,16,17,12,20,19,21,22,23,18,26,25,27,28,29,24,32,31,33,34,35,30],[2,3,1,4,5,0,8,9,7,10,11,6,14,15,13,16,17,12,20,21,19,22,23,18,26,27,25,28,29,24,32,33,31,34,35,30]],transRC=[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,
19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],[7,6,8,9,10,11,1,0,2,3,4,5,13,12,14,15,16,17,19,18,20,21,22,23,25,24,26,27,28,29,31,30,32,33,34,35],[7,8,6,9,10,11,13,14,12,15,16,17,1,2,0,3,4,5,19,20,18,21,22,23,25,26,24,27,28,29,31,32,30,33,34,35],[7,8,9,6,10,11,13,14,15,12,16,17,19,20,21,18,22,23,1,2,3,0,4,5,25,26,27,24,28,29,31,32,33,30,34,35],[7,8,9,10,6,11,13,14,15,16,12,17,19,20,21,22,18,23,25,26,27,28,24,29,1,2,3,4,0,5,31,32,33,34,30,35],[7,8,9,10,11,6,13,14,15,16,17,12,19,20,21,22,23,18,
25,26,27,28,29,24,31,32,33,34,35,30,1,2,3,4,5,0],[14,13,15,16,17,12,8,7,9,10,11,6,20,19,21,22,23,18,26,25,27,28,29,24,32,31,33,34,35,30,2,1,3,4,5,0],[14,15,13,16,17,12,20,21,19,22,23,18,8,9,7,10,11,6,26,27,25,28,29,24,32,33,31,34,35,30,2,3,1,4,5,0]])}self.addEventListener("message",function(a){a=a.data;cipher=a.cipher;uInt8Array=a.uInt8Array;totalWorkers=a.totalWorkers;workerNumber=a.workerNumber;numSols=a.numSols;alphabet=a.alphabet;keyword=a.keyword;routes=a.routes;decipherPhillips()},!1);