var cipher,uInt8Array,totalWorkers,workerNumber,numSols,keyword,isRunning,solutions=[],invalid,keyTrials;function decipherMorbit(){"function"===typeof importScripts&&(importScripts("../support/decipherLib.js"),importScripts("../support/cryptoPrograms.js"),importScripts("../support/morse.js"));initSolution();invalid=getInvalidDoubles();"undefined"!==typeof keyword&&(0<keyword.length?solveWithKeyword(keyword):solveMorbit());!1===isRunning&&self.postMessage({cmd:"STOP",msg:""})}
function solveMorbit(){var a;keyTrials=0;var b=permutator("123456789".split(""));for(a=0;a<b.length;a+=1)decrypt(b[a]),keyTrials+=1,self.postMessage({cmd:"progress",worker:workerNumber,trials:keyTrials,totalWorkers:totalWorkers});isRunning=!1}function solveWithKeyword(a){decrypt(a);isRunning=!1}
function decrypt(a){var b;var c="";var d=a[a.length-1];if(-1===invalid.indexOf(d)){for(b=0;b<cipher.length;b+=1)d=cipher.charAt(b),d=a.indexOf(d),c+="...-.x-.---xx.x-xx".substr(2*d,2);b=convertMorseToAnyPlain(c);c=getTetraScore(b.replace(/[^a-z]/g,""));solutions[numSols-1]<c&&(solutions[numSols-1]=c,solutions.sort(function(e,f){return f-e}),self.postMessage({cmd:"reslt",key:a.join(""),score:c,text:b}))}}
function getInvalidDoubles(){var a;invalid="";for(a=1;10>a;a+=1){var b=a.toString();0<=cipher.indexOf(b+b)&&(invalid+=b)}return invalid}self.addEventListener("message",function(a){a=a.data;cipher=a.cipher;uInt8Array=a.uInt8Array;totalWorkers=a.totalWorkers;workerNumber=a.workerNumber;numSols=a.numSols;keyword=a.keyword;decipherMorbit()},!1);