var cipher,uInt8Array,totalWorkers,workerNumber,numSols,keyword,cType,isRunning,plain,solutions=[],key=[];function decipherAutokey(){"function"===typeof importScripts&&(importScripts("../support/decipherLib.js"),importScripts("../support/cryptoPrograms.js"));initSolution();"undefined"!==typeof keyword&&(0<keyword.length?solveWithKeyword():3===cType?solvePorta():solveNonPorta());!1===isRunning&&self.postMessage({cmd:"STOP",msg:""})}
function solveNonPorta(){var d,c,a,b,e,g,h=ord("A"),f=ord("a"),k=[],l=[],r=[];var p=0;var m=1<totalWorkers?workerNumber:0;isRunning=!0;a:for(;26>m;m+=totalWorkers)for(l[0]=m,k[0]=chr(m+f),d=0;26>d;d+=1)for(l[1]=d,k[1]=chr(d+f),c=0;26>c;c+=1){if(!isRunning)break a;l[2]=c;k[2]=chr(c+f);for(a=0;26>a;a+=1){l[3]=a;k[3]=chr(a+f);var t=0;var n=getTestKeyScore(l,4,0);n+=getSingleTetraScore(k,4,0);if(0<n)for(g=4;20>g;g+=1){var q=0;n=getTestKeyScore(l,4,0);for(b=0;b<cipher.length-g-4;b+=g){for(e=0;4>e;e+=1)r[e]=
ord(plain[e])-f;q+=getTestKeyScore(r,4,g+b)}n+q>t&&(t=n+q,key[0]=chr(m+h),key[1]=chr(d+h),key[2]=chr(c+h),key[3]=chr(a+h),getRemainingKey(g))}p+=1}self.postMessage({cmd:"progress",worker:workerNumber,trials:p,totalWorkers:totalWorkers})}isRunning=!1;self.postMessage({cmd:"progress",worker:workerNumber,trials:p,totalWorkers:totalWorkers})}
function solvePorta(){var d,c,a,b=ord("A"),e=[];var g=0;var h=1<totalWorkers?2*workerNumber:0;isRunning=!0;a:for(;26>h;h+=2*totalWorkers)for(e[0]=h,d=0;26>d;d+=2)for(e[1]=d,c=0;26>c;c+=2){if(!isRunning)break a;e[2]=c;for(a=0;26>a;a+=2){e[3]=a;var f=getTestKeyScore(e,4,0);if(4<f)for(f=4;20>f;f+=1)getTestKeyScore(e,4,0),key[0]=chr(h+b),key[1]=chr(d+b),key[2]=chr(c+b),key[3]=chr(a+b),getRemainingKey(f);g+=1}self.postMessage({cmd:"progress",worker:workerNumber,trials:g,totalWorkers:totalWorkers})}isRunning=
!1;self.postMessage({cmd:"progress",worker:workerNumber,trials:g,totalWorkers:totalWorkers})}
function getRemainingKey(d){var c,a,b=ord("A"),e=[];for(c=0;4>c;c+=1)e[c]=key[c];for(c=4;c<d;c+=1)e[c]="A";for(c=4;c<d;c+=1){var g=0;key[c]="A";for(a=0;26>a;a+=1){e[c]=chr(a+b);plain=decrypt(e,d);var h=getTetraScore(plain);h>g&&(g=h,key[c]=chr(a+b),solutions[numSols-1]<h&&(solutions[numSols-1]=h,solutions.sort(function(f,k){return k-f}),self.postMessage({cmd:"reslt",key:key.join("").substr(0,d),score:h,text:plain})))}e[c]=key[c]}}
function solveWithKeyword(){plain=decrypt(keyword,keyword.length);var d=getTetraScore(plain);solutions[numSols-1]<d&&(solutions[numSols-1]=d,solutions.sort(function(c,a){return a-c}),self.postMessage({cmd:"reslt",key:keyword,score:d,text:plain}));isRunning=!1}
function decrypt(d,c){var a,b=0,e="",g=ord("A"),h=ord("a"),f=[];for(a=0;a<c;a+=1)f[a]=ord(d[a])-g;switch(cType){case 0:case 4:for(a=0;a<cipher.length;a+=1)e+=decryptVigenere(cipher[b],f[a]),f[a+c]=ord(e[a])-h,b+=1;break;case 1:for(a=0;a<cipher.length;a+=1)e+=decryptBeaufort(cipher[b],f[a]),f[a+c]=ord(e[a])-h,b+=1;break;case 2:for(a=0;a<cipher.length;a+=1)e+=decryptVariant(cipher[b],f[a]),f[a+c]=ord(e[a])-h,b+=1;break;case 3:for(a=0;a<c;a+=1)f[a]=Math.floor(f[a]/2)+13;for(a=0;a<cipher.length;a+=1)e+=
decryptPorta(cipher[b],f[a]),f[a+c]=Math.floor((ord(e[a])-h)/2)+13,b+=1}return e}
function getTestKeyScore(d,c,a){var b,e=[];var g=0;plain="";switch(cType){case 0:case 4:for(b=0;b<c;b+=1)plain+=decryptVigenere(cipher[b+a],d[b]);g+=getTetraScore(plain);break;case 1:for(b=0;b<c;b+=1)plain+=decryptBeaufort(cipher[b+a],d[b]);g+=getTetraScore(plain);break;case 2:for(b=0;b<c;b+=1)plain+=decryptVariant(cipher[b+a],d[b]);g+=getTetraScore(plain);break;case 3:for(b=0;b<c;b+=1)e[b]=Math.floor(d[b]/2)+13;for(b=0;b<c;b+=1)plain+=decryptPorta(cipher[b+a],e[b]);g+=getTetraScore(plain)}return g}
self.addEventListener("message",function(d){d=d.data;cipher=d.cipher;uInt8Array=d.uInt8Array;totalWorkers=d.totalWorkers;workerNumber=d.workerNumber;numSols=d.numSols;keyword=d.keyword;cType=d.cType;decipherAutokey()},!1);