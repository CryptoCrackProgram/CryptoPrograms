var cipher,numSols,uInt8Array,isRunning,minWidth,maxWidth,solutions=[],spiralDirection=[],routes=[],gridWd,startRow,startCol,row,col,height,direction,alternate,change;function decipherRoute(){"function"===typeof importScripts&&(importScripts("../support/decipherLib.js"),importScripts("../support/cryptoPrograms.js"));initSolution();decrypt();!1===isRunning&&self.postMessage({cmd:"STOP",msg:""})}
function decrypt(){var a,d,b,c=[];isRunning=!0;cipher=cipher.toLowerCase();var e=readRouteNames();readSpiralDirections();for(gridWd=minWidth;gridWd<=maxWidth;gridWd+=1)if(0===cipher.length%gridWd&&2<cipher.length/gridWd){var f=[];for(a=0;48>a;a+=1)spiralDirection[a]=[];calcRoutes();for(d=0;48>d;d+=1)for(b=0;48>b;b+=1)if(d!==b){for(a=0;a<cipher.length;a+=1)c[routes[b][a]]=cipher[routes[d][a]];f=[].concat.apply([],c).join("").toLowerCase();var g=getTetraScore(f.replace(/[^a-z]/g,""));solutions[numSols-
1]<g&&(solutions[numSols-1]=g,solutions.sort(function(h,k){return k-h}),a=gridWd.toString()+"x"+cipher.length/gridWd+" "+e[Math.floor(b)]+"/"+e[Math.floor(d)],self.postMessage({cmd:"reslt",key:a,score:g,text:f}))}}isRunning=!1}
function readRouteNames(){return"Rows from top left;Rows from top right;Rows from bot left;Rows from bot right;Alt Rows from top left;Alt Rows from top right;Alt Rows from bot left;Alt Rows from bot right;Cols from top left;Cols from top right;Cols from bot left;Cols from bot right;Alt Cols from top left;Alt Cols from top right;Alt Cols from bot left;Alt Cols from bot right;Diags from top left;Diags from top right;Diags from bot left;Diags from bot right;Alt Diags from top left;Alt Diags from top right;Alt Diags from bot left;Alt Diags from bot right;Rev Diags from top left;Rev Diags from top right;Rev Diags from bot left;Rev Diags from bot right;Rev Alt Diags from top left;Rev Alt Diags from top right;Rev Alt Diags from bot left;Rev Alt Diags from bot right;Clockwise from top left;Clockwise from top right;Clockwise from bot left;Clockwise from bot right;Counterclock from top left;Counterclock from top right;Counterclock from bot left;Counterclock from bot right;Clockwise from middle starting up;Clockwise from middle starting right;Clockwise from middle starting down;Clockwise from middle starting left;Counterclock from middle starting up;Counterclock from middle starting right;Counterclock from middle starting down;Counterclock from middle starting left".split(";")}
function readSpiralDirections(){var a;for(a=0;8>a;a+=1)spiralDirection[a]=[];spiralDirection[0][0]=0;spiralDirection[0][1]=1;spiralDirection[1][0]=1;spiralDirection[1][1]=0;spiralDirection[2][0]=0;spiralDirection[2][1]=-1;spiralDirection[3][0]=-1;spiralDirection[3][1]=0;spiralDirection[4][0]=1;spiralDirection[4][1]=0;spiralDirection[5][0]=0;spiralDirection[5][1]=1;spiralDirection[6][0]=-1;spiralDirection[6][1]=0;spiralDirection[7][0]=0;spiralDirection[7][1]=-1}
function calcRoutes(){var a,d,b;for(a=0;48>a;a+=1)routes[a]=[];for(a=0;8>a;a+=1)spiralDirection[a]=[];readSpiralDirections(spiralDirection);var c=cipher.length;height=c/gridWd;for(a=0;a<c;a+=1)routes[0][a]=a;direction=!0;for(a=0;a<c;a+=gridWd){for(d=0;d<=gridWd;d+=1)routes[4][a+d]=direction?a+d:a+gridWd-d-1;direction=!direction}for(a=b=0;a<c;a+=gridWd){routes[8][a]=b;for(d=a+1;d<a+gridWd;d+=1)routes[8][d]=routes[8][d-1]+height;b+=1}for(a=b=0;a<height;a+=1)for(direction=!0,d=0;d<gridWd;d+=1)routes[12][b]=
direction?a+d*height:(d+1)*height-a-1,b+=1,direction=!direction;change=alternate=!1;for(a=col=row=startCol=startRow=0;a<c;a+=1)routes[16][row*gridWd+col]=a,nextPosition();alternate=!0;change=!1;direction=!0;for(a=col=row=startCol=startRow=0;a<c;a+=1)routes[28][row*gridWd+col]=a,direction?nextPosition():trackBack();alternate=!1;for(a=col=row=startCol=startRow=0;a<c;a+=1)routes[24][row*gridWd+col]=a,change=!1,trackBack();alternate=!0;direction=change=!1;for(a=col=row=startCol=startRow=0;a<c;a+=1)routes[20][row*
gridWd+col]=a,direction?nextPosition():trackBack();for(a=b=col=row=0;a<c;a+=1)for(d=32;48>d;d+=1)routes[d][a]=-1;for(a=0;a<c;a+=1)routes[32][row*gridWd+col]=a,routes[47][row*gridWd+col]=c-a-1,row+spiralDirection[b][0]>=height||0>row+spiralDirection[b][0]||col+spiralDirection[b][1]>=gridWd||0>col+spiralDirection[b][1]?b=(b+1)%4:0<=routes[32][(row+spiralDirection[b][0])*gridWd+col+spiralDirection[b][1]]&&(b=(b+1)%4),row+=spiralDirection[b][0],col+=spiralDirection[b][1];row=0;col=gridWd-1;b=1;for(a=
0;a<c;a+=1)routes[33][row*gridWd+col]=a,routes[44][row*gridWd+col]=c-a-1,row+spiralDirection[b][0]>=height||0>row+spiralDirection[b][0]||col+spiralDirection[b][1]>=gridWd||0>col+spiralDirection[b][1]?b=(b+1)%4:0<=routes[33][(row+spiralDirection[b][0])*gridWd+col+spiralDirection[b][1]]&&(b=(b+1)%4),row+=spiralDirection[b][0],col+=spiralDirection[b][1];row=height-1;col=0;b=3;for(a=0;a<c;a+=1)routes[34][row*gridWd+col]=a,routes[46][row*gridWd+col]=c-a-1,row+spiralDirection[b][0]>=height||0>row+spiralDirection[b][0]||
col+spiralDirection[b][1]>=gridWd||0>col+spiralDirection[b][1]?b=(b+1)%4:0<=routes[34][(row+spiralDirection[b][0])*gridWd+col+spiralDirection[b][1]]&&(b=(b+1)%4),row+=spiralDirection[b][0],col+=spiralDirection[b][1];row=height-1;col=gridWd-1;b=2;for(a=0;a<c;a+=1)routes[35][row*gridWd+col]=a,routes[45][row*gridWd+col]=c-a-1,row+spiralDirection[b][0]>=height||0>row+spiralDirection[b][0]||col+spiralDirection[b][1]>=gridWd||0>col+spiralDirection[b][1]?b=(b+1)%4:0<=routes[35][(row+spiralDirection[b][0])*
gridWd+col+spiralDirection[b][1]]&&(b=(b+1)%4),row+=spiralDirection[b][0],col+=spiralDirection[b][1];for(a=b=col=row=0;a<c;a+=1)routes[36][row*gridWd+col]=a,routes[40][row*gridWd+col]=c-a-1,row+spiralDirection[b+4][0]>=height||0>row+spiralDirection[b+4][0]||col+spiralDirection[b+4][1]>=gridWd||0>col+spiralDirection[b+4][1]?b=(b+1)%4:0<=routes[36][(row+spiralDirection[b+4][0])*gridWd+col+spiralDirection[b+4][1]]&&(b=(b+1)%4),row+=spiralDirection[b+4][0],col+=spiralDirection[b+4][1];row=0;col=gridWd-
1;b=2;for(a=0;a<c;a+=1)routes[37][row*gridWd+col]=a,routes[41][row*gridWd+col]=c-a-1,row+spiralDirection[b+4][0]>=height||0>row+spiralDirection[b+4][0]||col+spiralDirection[b+4][1]>=gridWd||0>col+spiralDirection[b+4][1]?b=(b+1)%4:0<=routes[37][(row+spiralDirection[b+4][0])*gridWd+col+spiralDirection[b+4][1]]&&(b=(b+1)%4),row+=spiralDirection[b+4][0],col+=spiralDirection[b+4][1];row=height-1;for(a=b=col=0;a<c;a+=1)routes[38][row*gridWd+col]=a,routes[43][row*gridWd+col]=c-a-1,row+spiralDirection[b+
4][0]>=height||0>row+spiralDirection[b+4][0]||col+spiralDirection[b+4][1]>=gridWd||0>col+spiralDirection[b+4][1]?b=(b+1)%4:0<=routes[38][(row+spiralDirection[b+4][0])*gridWd+col+spiralDirection[b+4][1]]&&(b=(b+1)%4),row+=spiralDirection[b+4][0],col+=spiralDirection[b+4][1];row=height-1;col=gridWd-1;b=1;for(a=0;a<c;a+=1)routes[39][row*gridWd+col]=a,routes[42][row*gridWd+col]=c-a-1,row+spiralDirection[b+4][0]>=height||0>row+spiralDirection[b+4][0]||col+spiralDirection[b+4][1]>=gridWd||0>col+spiralDirection[b+
4][1]?b=(b+1)%4:0<=routes[39][(row+spiralDirection[b+4][0])*gridWd+col+spiralDirection[b+4][1]]&&(b=(b+1)%4),row+=spiralDirection[b+4][0],col+=spiralDirection[b+4][1];for(a=0;32>a;a+=4)transposeGrid(a,c)}function transposeGrid(a,d){horizontalReflection(a,a+1,d);verticalReflection(a,a+2,d);horizontalReflection(a+2,a+3,d)}function horizontalReflection(a,d,b){var c,e;for(c=0;c<b;c+=gridWd){var f=0;for(e=c+gridWd-1;e>=c;--e)routes[d][e]=routes[a][c+f],f+=1}}
function verticalReflection(a,d,b){var c,e;row=b/gridWd-1;for(c=0;c<b;c+=gridWd){for(e=0;e<gridWd;e+=1)routes[d][row*gridWd+e]=routes[a][c+e];--row}}function nextPosition(){if(alternate&&change)col+=1,col>=gridWd&&(row+=1,--col),change=!1;else{row+=1;--col;if(-1===col||row>=height)row=startRow,col=startCol+=1;startCol>=gridWd&&(row=startRow+=1,col=startCol=gridWd-1);if(0===col||row===height-1)direction=!direction,change=!0}}
function trackBack(){if(change)row+=1,row>=height&&(--row,col+=1),change=!1;else{--row;col+=1;if(-1===row||col>=gridWd)row=startRow+=1,col=startCol;startRow>=height&&(row=startRow=height-1,col=startCol+=1);if(0===row||col===gridWd-1)direction=!direction,change=!0}}self.addEventListener("message",function(a){a=a.data;cipher=a.cipher;uInt8Array=a.uInt8Array;numSols=a.numSols;minWidth=a.minWidth;maxWidth=a.maxWidth;decipherRoute()},!1);